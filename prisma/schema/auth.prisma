model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  emailVerified Boolean   @default(false)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]

  seenMessagesIds String[] @db.ObjectId
  conversationIds String[] @db.ObjectId

  // messageSeens           MessageSeen[]
  // conversations          ConversationMember[]
  seenMessages           Message[]      @relation("MessageSeenBy", fields: [seenMessagesIds], references: [id])
  conversations          Conversation[] @relation("ConversationMembers", fields: [conversationIds], references: [id])
  messages               Message[]
  sentFriendRequests     Friendship[]   @relation("UserSentRequests")
  receivedFriendRequests Friendship[]   @relation("UserReceivedRequests")

  @@unique([email])
  @@map("users")
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("sessions")
}

model Account {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  accountId             String
  providerId            String
  userId                String    @db.ObjectId
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("accounts")
}

model Verification {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verifications")
}
